version: '3'
services:
  # standard postgres instance to store application data
  db:
    image: postgres:9.6
    ports:
      - 5432:5432
    restart: on-failure

  # creates the initial database and, maybe later, runs migrations
  migrate:
    build: .
    command: pipenv run python create.py
    volumes:
      - .:/code
    environment:
      FLASK_ENV: development
    depends_on:
      - db
    restart: on-failure

  # API server
  server:
    build: .
    command: pipenv run python app.py
    ports:
      - 3001:3001
    volumes:
      - .:/code
    environment:
      FLASK_ENV: development
    depends_on:
      - migrate
    restart: on-failure

  # simple background process to run computations outside requests
  bgcompute:
    build: .
    command: pipenv run python bgcompute.py
    volumes:
      - .:/code
    environment:
      FLASK_ENV: development
    depends_on:
      - migrate
    restart: on-failure

  # react web client
  client:
    image: node:12.13.0
    command: sh -c 'yarn && yarn start'
    working_dir: /code
    ports:
      - 3000:3000
    volumes:
      - ./arlo-client:/code
      - arlo-client-node_modules:/code/node_modules
    environment:
      NODE_ENV: development
      ARLO_BACKEND_URL: http://server:3001/
    restart: on-failure

  # this is here both to create the test database and serve as a way to run server tests easily
  server-tests:
    build: .
    command: pipenv run python create.py
    volumes:
      - .:/code
    environment:
      FLASK_ENV: test
    depends_on:
      - server

  # provides a way to run client tests easily
  client-tests:
    build: arlo-client
    command: /bin/true
    working_dir: /code
    volumes:
      - ./arlo-client:/code
      - arlo-client-node_modules:/code/node_modules
    environment:
      NODE_ENV: test
    depends_on:
      - client

volumes:
  arlo-client-node_modules:
